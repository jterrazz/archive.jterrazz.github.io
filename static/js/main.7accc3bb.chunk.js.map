{"version":3,"sources":["components/organisms/TheNavBar.js","components/atoms/TagTogglable.js","components/molecules/ProjectCell.js","components/organisms/MyProjects.js","components/molecules/Terminal.js","components/organisms/MyInformations.js","config/index.js","components/organisms/MyIntroduction.js","components/organisms/WelcomeMessage.js","components/organisms/MyArticles.js","components/pages/Home.js","components/organisms/TheFooter.js","components/organisms/WelcomeModal.js","serviceWorker.js","index.js","App.js"],"names":["TheNavBar","props","Navbar","bg","sticky","to","Brand","className","Nav","Dropdown","Toggle","id","Menu","Item","eventKey","active","type","TagTogglable","onClick","onToggle","selected","children","ProjectCell","Col","xs","project","name","date","toDateString","description","MyProjects","PROJECTS","link","Date","category","tags","useState","map","tag","setTags","filteredProjects","key","el","Button","variant","Row","Terminal","showText","setShowText","cursorOptions","show","blink","element","hideWhenDone","hideWhenDoneDelay","useEffect","terminalPositionTracker","document","getElementById","getBoundingClientRect","top","window","innerHeight","removeEventListener","addEventListener","src","alt","width","cursor","Backspace","count","delay","MyInformations","x","config","email","MyIntroduction","href","WelcomeMessage","Article","style","paddingBottom","backgroundImage","imageSrc","title","MyArticles","articles","article","Home","height","Container","TheFooter","role","aria-label","WelcomeModal","Boolean","location","hostname","match","ReactDOM","render","path","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2VAgDeA,G,MAzCG,SAAAC,GAChB,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,OACxB,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAACH,EAAA,EAAOI,MAAR,CAAcC,UAAU,0BAAxB,aAGF,kBAACC,EAAA,EAAD,CAAKD,UAAU,qCACb,yBAAKA,UAAU,mBACf,yBAAKA,UAAU,yBAAf,uBAGF,yBAAKA,UAAU,yBACb,0BAAMA,UAAU,QAAhB,MACA,qCAGF,kBAACE,EAAA,EAAD,KACE,kBAACA,EAAA,EAASC,OAAV,CAAiBC,GAAG,8BAApB,UAIA,kBAACF,EAAA,EAASG,KAAV,KACE,kBAACH,EAAA,EAASI,KAAV,CAAeC,SAAS,KAAxB,OACA,kBAACL,EAAA,EAASI,KAAV,CAAeC,SAAS,KAAxB,QACA,kBAACL,EAAA,EAASI,KAAV,CAAeC,SAAS,IAAIC,QAAM,GAAlC,UAGA,kBAACN,EAAA,EAASI,KAAV,CAAeC,SAAS,KAAxB,gBAIJ,4BAAQP,UAAU,yCAAyCS,KAAK,UAC9D,0BAAMT,UAAU,iBACd,0BAAMA,UAAU,yB,gBCvBXU,G,MAfM,SAAAhB,GAOnB,OACE,4BAAQiB,QAPM,WACVjB,EAAMkB,UACRlB,EAAMkB,UAAUlB,EAAMmB,WAKEb,UAAWN,EAAMM,UAAY,mEAAqEN,EAAMmB,SAAW,UAAY,KACvJ,8BAAOnB,EAAMoB,UACb,0BAAMd,UAAU,qB,wBCaPe,EAvBK,SAAArB,GAClB,OACE,kBAACsB,EAAA,EAAD,CAAKC,GAAI,GACP,wBAAIjB,UAAU,+BACZ,6BACE,yBAAKA,UAAU,cACZN,EAAMwB,QAAQC,KAAK,IAEtB,6BACE,4BAAKzB,EAAMwB,QAAQC,MACnB,2BAAIzB,EAAMwB,QAAQE,KAAKC,iBAGzB,2BAAI3B,EAAMwB,QAAQI,aAElB,sCACA,uCCqBKC,EAlCI,SAAA7B,GACjB,IACM8B,EAAW,CACf,CAAEL,KAAM,YAAaM,KAAM,sBAAuBL,KAAM,IAAIM,KAAQJ,YAAa,sBAAuBK,SAAU,WAAYC,KAAM,CAAC,WAAY,UAAW,QAAS,SAAU,SAAU,SAHjK,EAKFC,mBAJX,CAAC,WAAY,eAAgB,cAIJC,KAAI,SAAAC,GAAG,MAAK,CAAEZ,KAAMY,EAAKvB,QAAQ,OAL7C,mBAKnBoB,EALmB,KAKbI,EALa,KAOpBC,EAAmBT,EAMzB,OACE,6BACE,wBAAIxB,UAAU,QAAd,eAEA,yBAAKA,UAAU,QACb,0BAAMA,UAAU,wBAAhB,SACC4B,EAAKE,KAAI,SAAAC,GAAG,OACX,kBAAC,EAAD,CAAc/B,UAAU,OAAOkC,IAAKH,EAAIZ,KAAMP,UAXlCO,EAWwDY,EAAIZ,KAXpD,SAAAX,GAC1BwB,EAAQJ,EAAKE,KAAI,SAAAK,GAAE,OAAIA,EAAGhB,OAASA,EAAQ,CAAEA,OAAMX,UAAY2B,QAUsBtB,SAAUkB,EAAIvB,QAASuB,EAAIZ,MAX9F,IAAAA,KAad,kBAACiB,EAAA,EAAD,CAAQC,QAAQ,cAAcrC,UAAU,8BAAxC,eAIF,kBAACsC,EAAA,EAAD,KACGL,EAAiBH,KAAI,SAAAZ,GAAO,OAAI,kBAAC,EAAD,CAAaA,QAASA,U,iBCahDqB,G,MA1CE,SAAA7C,GAAU,IAAD,EACQmC,oBAAS,GADjB,mBACjBW,EADiB,KACPC,EADO,KAGlBC,EAAgB,CACpBC,MAAM,EACNC,OAAO,EACPC,QAAS,IACTC,cAAc,EACdC,kBAAmB,KAGrBC,qBAAU,WACR,IAAMC,EAA0B,SAA1BA,IACmBC,SAASC,eAAe,YAC5BC,wBAAwBC,KAAO,EAAIC,OAAOC,YAAc,IACzEd,GAAY,GACZS,SAASM,oBAAoB,SAAUP,KAK3C,OADAC,SAASO,iBAAiB,SAAUR,GAC7B,WACLC,SAASM,oBAAoB,SAAUP,MAExC,IAUH,OACE,yBAAK7C,GAAG,WAAWJ,UAAU,iDAC3B,yBAAK0D,IAAI,4BAA4BC,IAAI,WAAWC,MAAO,GAAI5D,UAAU,SACxEwC,EAVH,kBAAC,IAAD,CAAQqB,OAAQnB,GACd,kDACA,kBAAC,IAAOoB,UAAR,CAAkBC,MAAO,EAAGC,MAAO,MACnC,2CAO2B,QCXlBC,EAxBQ,SAAAvE,GACrB,OACE,6BACE,wBAAIM,UAAU,QAAd,YAEA,kBAACsC,EAAA,EAAD,KACE,kBAACtB,EAAA,EAAD,CAAKC,GAAI,GAAT,gOAQA,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC,WAAD,CAAUiD,EAAG,CAAC,GAAI,IAChB,kBAAC,EAAD,WClBGC,EAJA,CACbC,MAAO,2BCwBMC,EArBQ,SAAA3E,GACrB,OACE,6BACE,uBAAGM,UAAU,QACX,yBAAK0D,IAAI,0BAA0BE,MAAO,GAAI5D,UAAU,SACxD,wBAAIA,UAAU,wBAAd,yBACwB,6BADxB,sCACgE,6BADhE,gBAGA,uBAAGA,UAAU,wBAAb,wIACyB,6EAG3B,uBAAGA,UAAU,wCAAuC,uBAAGsE,KAAM,UAAYH,EAAOC,MAAOpE,UAAU,aAAamE,EAAOC,QAErH,kBAAChC,EAAA,EAAD,CAAQC,QAAQ,OAAOrC,UAAU,gBAAjC,eACA,kBAACoC,EAAA,EAAD,sDACA,kBAACA,EAAA,EAAD,oCCHSmC,EAdQ,SAAA7E,GACrB,OACE,6BACE,yBAAKM,UAAU,mDAAf,SAGA,wBAAIA,UAAU,QAAd,YACW,mEADX,2EAGA,kBAACoC,EAAA,EAAD,CAAQC,QAAQ,OAAOrC,UAAU,oCAAjC,aCRAwE,EAAU,SAAA9E,GACd,OACE,kBAACsB,EAAA,EAAD,CAAKC,GAAI,GACP,wBAAIjB,UAAU,sDACZ,yBAAKA,UAAU,uCAAuCyE,MAAO,CAAEC,cAAe,OAAQC,gBAAgB,OAAD,OAASjF,EAAMkF,SAAf,OACnG,yBAAK5E,UAAU,0EACb,wBAAIA,UAAU,uBAAuBN,EAAMmF,SAG/C,yBAAK7E,UAAU,kCACb,yBAAKA,UAAU,uBAAf,aAAgDN,EAAM0B,KAAKC,gBAC3D,uBAAGrB,UAAU,uBAAuBN,EAAM4B,iBAyBrCwD,EAlBI,SAAApF,GACjB,IAAMqF,EAAW,CACf,CAAEH,SAAU,iEAAkEC,MAAO,sBAAuBzD,KAAM,IAAIM,KAAQJ,YAAa,QAC3I,CAAEsD,SAAU,iEAAkEC,MAAO,sBAAuBzD,KAAM,IAAIM,KAAQJ,YAAa,QAC3I,CAAEsD,SAAU,iEAAkEC,MAAO,sBAAuBzD,KAAM,IAAIM,KAAQJ,YAAa,SAE7I,OACE,6BACE,iDACA,uBAAGtB,UAAU,mBAAb,qDACA,kBAACsC,EAAA,EAAD,CAAKtC,UAAU,QACZ+E,EAASjD,KAAI,SAAAkD,GAAO,OAAI,kBAAC,EAAYA,OAExC,uBAAGhF,UAAU,cAAb,8DCqBSiF,EA9CF,SAAAvF,GAEX,OACE,6BACI,yBAAK+E,MAAO,CAACS,OAAQ,QAASlF,UAAU,6BACtC,yBAAKA,UAAU,iCACb,kBAACmF,EAAA,EAAD,CAAWnF,UAAU,wFACnB,kBAAC,EAAD,SAOR,yBAAKA,UAAU,gBACb,kBAACmF,EAAA,EAAD,KACE,kBAAC,EAAD,QAIJ,kBAACA,EAAA,EAAD,CAAWnF,UAAU,QACnB,kBAAC,EAAD,OAGF,yBAAKA,UAAU,YACb,kBAACmF,EAAA,EAAD,CAAWnF,UAAU,QACnB,kBAAC,EAAD,QAIJ,yBAAKA,UAAU,0BACb,kBAACmF,EAAA,EAAD,KACE,kBAAC,EAAD,QAIJ,2FClCSC,EAVG,SAAA1F,GAChB,OACE,gCACE,0CAAe,0BAAM2F,KAAK,MAAMC,aAAW,QAA5B,gBAAf,kBACA,uDACA,+CCISC,EATM,SAAA7F,GACnB,OAAO,MCSW8F,QACW,cAA7BlC,OAAOmC,SAASC,UAEe,UAA7BpC,OAAOmC,SAASC,UAEhBpC,OAAOmC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBCOD,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACE,kBAAC,mBAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,KACV,kBAAC,EAAD,SAIR,kBAAC,EAAD,MACA,kBAAC,EAAD,SDnBU,MAAS5C,SAASC,eAAe,SD2H3C,kBAAmB4C,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.7accc3bb.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport React from \"react\";\nimport \"./TheNavBar.scss\"\n\nconst TheNavBar = props => {\n  return (\n    <Navbar bg=\"white\" sticky=\"top\">\n      <Link to=\"/\">\n        <Navbar.Brand className=\"navbar-brand text-dark\">jterrazz</Navbar.Brand>\n      </Link>\n\n      <Nav className=\"mx-auto d-flex align-items-center\">\n        <div className=\"green-dot mr-2\"/>\n        <div className=\"small font-weight-500\">Available for work</div>\n      </Nav>\n\n      <div className=\"small font-weight-600\">\n        <span className=\"mr-1\">EN</span>\n        <span>FR</span>\n      </div>\n\n      <Dropdown>\n        <Dropdown.Toggle id=\"dropdown-custom-components\">\n          wefwef\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          <Dropdown.Item eventKey=\"1\">Red</Dropdown.Item>\n          <Dropdown.Item eventKey=\"2\">Blue</Dropdown.Item>\n          <Dropdown.Item eventKey=\"3\" active>\n            Orange\n          </Dropdown.Item>\n          <Dropdown.Item eventKey=\"1\">Red-Orange</Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n\n      <button className=\"hamburger hamburger--collapse p-0 ml-3\" type=\"button\">\n        <span className=\"hamburger-box\">\n          <span className=\"hamburger-inner\"/>\n        </span>\n      </button>\n    </Navbar>\n  )\n}\n\nexport default TheNavBar\n","import React from \"react\";\nimport './TagTogglable.scss'\n\nconst TagTogglable = props => {\n  const onClick = () => {\n    if (props.onToggle) {\n      props.onToggle(!props.selected);\n    }\n  };\n\n  return (\n    <button onClick={onClick} className={props.className + \" border d-inline-flex align-items-center tag-togglable animated\" + (props.selected ? \" active\" : \"\")}>\n      <span>{props.children}</span>\n      <span className=\"plus animated\"/>\n    </button>\n  )\n};\n\nexport default TagTogglable\n","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\n\nconst ProjectCell = props => {\n  return (\n    <Col xs={4}>\n      <li className=\"bg-white p-4 rounded border\">\n        <div>\n          <div className=\"bg-primary\">\n            {props.project.name[0]}\n          </div>\n          <div>\n            <h5>{props.project.name}</h5>\n            <p>{props.project.date.toDateString()}</p>\n          </div>\n\n          <p>{props.project.description}</p>\n\n          <h6>Skills</h6>\n          <div>OK</div>\n        </div>\n      </li>\n    </Col>\n  )\n}\n\nexport default ProjectCell\n","import React, {useState} from \"react\";\nimport TagTogglable from \"../atoms/TagTogglable\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport ProjectCell from \"../molecules/ProjectCell\";\n\nconst MyProjects = props => {\n  const TAGS = ['Personal', 'Professional', 'Hackathons'];\n  const PROJECTS = [\n    { name: \"Hypertube\", link: \"https://github.com/\", date: new Date(), description: \"A project about XXX\", category: \"Personal\", tags: [\"Frontend\", \"Backend\", \"React\", \"NextJS\", \"NodeJS\", \"Koa\"] },\n  ]\n  const [tags, setTags] = useState(TAGS.map(tag => ({ name: tag, active: false })));\n\n  const filteredProjects = PROJECTS\n\n  const onTagToggle = name => active => {\n    setTags(tags.map(el => el.name === name ? ({ name, active }) : el))\n  };\n\n  return (\n    <div>\n      <h2 className=\"mb-4\">My projects</h2>\n\n      <nav className=\"mb-4\">\n        <span className=\"font-weight-600 mr-2\">Tags:</span>\n        {tags.map(tag =>\n          <TagTogglable className=\"mr-2\" key={tag.name} onToggle={onTagToggle(tag.name)} selected={tag.active}>{tag.name}</TagTogglable>\n        )}\n        <Button variant=\"transparent\" className=\"font-weight-600 text-muted\">Select\n          all</Button>\n      </nav>\n\n      <Row>\n        {filteredProjects.map(project => <ProjectCell project={project}/>)}\n      </Row>\n\n    </div>\n  )\n};\n\nexport default MyProjects\n","import React, { useState, useEffect } from \"react\";\nimport Typist from 'react-typist';\nimport './Terminal.scss';\n\nconst Terminal = props => {\n  const [showText, setShowText] = useState(false);\n\n  const cursorOptions = {\n    show: true,\n    blink: true,\n    element: '|',\n    hideWhenDone: true,\n    hideWhenDoneDelay: 500,\n  };\n\n  useEffect(() => {\n    const terminalPositionTracker = () => {\n      const wrappedElement = document.getElementById('terminal');\n      if (wrappedElement.getBoundingClientRect().top <= 2 * window.innerHeight / 3) {\n        setShowText(true)\n        document.removeEventListener('scroll', terminalPositionTracker);\n      }\n    };\n\n    document.addEventListener('scroll', terminalPositionTracker);\n    return () => {\n      document.removeEventListener('scroll', terminalPositionTracker);\n    }\n  }, []);\n\n  const renderText = () => (\n    <Typist cursor={cursorOptions}>\n      <span> First Sentence </span>\n      <Typist.Backspace count={8} delay={200} />\n      <span> Phrase </span>\n    </Typist>\n  );\n\n  return (\n    <div id=\"terminal\" className=\"terminal text-white small font-weight-600 p-3\">\n      <img src=\"/images/terminal-dots.png\" alt=\"commands\" width={53} className=\"mb-2\"/>\n      {showText ? renderText() : null}\n    </div>\n  )\n};\n\nexport default Terminal\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport {Parallax} from \"react-scroll-parallax\";\nimport Terminal from \"../molecules/Terminal\";\n\nconst MyInformations = props => {\n  return (\n    <div>\n      <h2 className=\"mb-4\">About me</h2>\n\n      <Row>\n        <Col xs={5}>\n          Scalable, easy to read code\n          State of the art documentations\n          The best practice in Web development\n          A real care about design, both on the code and on the visual\n          Alumni of the innovative and best french programming school 42\n        </Col>\n\n        <Col xs={7}>\n          <Parallax x={[20, 0]}>\n            <Terminal/>\n          </Parallax>\n        </Col>\n      </Row>\n    </div>\n  )\n};\n\nexport default MyInformations\n","const config = {\n  email: \"jterrazz@protonmail.com\"\n}\n\nexport default config\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport config from \"../../config\";\n\nconst MyIntroduction = props => {\n  return (\n    <div>\n      <p className=\"mb-4\">\n        <img src=\"/images/waving-hand.svg\" width={42} className=\"mb-2\"/>\n        <h2 className=\"mb-5 font-weight-700\">\n          Hey there *waves*, my <br/> name is Jean-Baptiste, developer, <br/>XXX and XXX.\n        </h2>\n        <p className=\"mb-5 font-weight-500\">I love connecting brands and companies with their customers through performant code, design cared interfaces.\n          I can help you with ...<span>But enough about me, how can I help you ?</span></p>\n      </p>\n\n      <p className=\"text-uppercase font-weight-bold mb-5\"><a href={\"mailto:\" + config.email} className=\"text-dark\">{config.email}</a></p>\n\n      <Button variant=\"dark\" className=\"rounded-pill\">My projects</Button>\n      <Button>I also write stuff, want to check my articles</Button>\n      <Button>Check out my hackathons !</Button>\n    </div>\n  )\n}\n\nexport default MyIntroduction\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nconst WelcomeMessage = props => {\n  return (\n    <div>\n      <div className=\"small text-uppercase font-weight-500 text-muted\">\n        Hello\n      </div>\n      <h1 className=\"mb-4\">\n        I create <b>clean, robust, scalable and powerful</b> applications for the new world, same quality from backend to frontend.\n      </h1>\n      <Button variant=\"dark\" className=\"rounded-max font-weight-500 px-3\">My work</Button>\n    </div>\n  )\n}\n\nexport default WelcomeMessage\n","import React from \"react\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\n\nconst Article = props => {\n  return (\n    <Col xs={4}>\n      <li className=\"article-cell bg-dark-clear rounded overflow-hidden\">\n        <div className=\"w-100 bg-img-cover position-relative\" style={{ paddingBottom: \"100%\", backgroundImage: `url(${props.imageSrc})` }}>\n          <div className=\"position-absolute w-100 h-100 d-flex align-items-end p-3 bg-text-hover\">\n            <h3 className=\"m-0 font-weight-600\">{props.title}</h3>\n          </div>\n        </div>\n        <div className=\"p-3 text-muted font-weight-500\">\n          <div className=\"text-uppercase mb-2\">Article | {props.date.toDateString()}</div>\n          <p className=\"m-0 font-weight-500\">{props.description}</p>\n        </div>\n      </li>\n    </Col>\n  )\n}\n\nconst MyArticles = props => {\n  const articles = [\n    { imageSrc: \"https://miro.medium.com/max/5312/1*P6vFidQIJazsiNkh0ijqtQ.jpeg\", title: \"Everything you need\", date: new Date(), description: \"suka\" },\n    { imageSrc: \"https://miro.medium.com/max/5312/1*P6vFidQIJazsiNkh0ijqtQ.jpeg\", title: \"Everything you need\", date: new Date(), description: \"suka\" },\n    { imageSrc: \"https://miro.medium.com/max/5312/1*P6vFidQIJazsiNkh0ijqtQ.jpeg\", title: \"Everything you need\", date: new Date(), description: \"suka\" },\n  ]\n  return (\n    <div>\n      <h2>My medium stories</h2>\n      <p className=\"text-muted mb-5\">Articles about unix, security and web development</p>\n      <Row className=\"mb-5\">\n        {articles.map(article => <Article {...article}/>)}\n      </Row>\n      <p className=\"text-muted\">Interested in learning more ? Access all my stories here</p>\n    </div>\n  )\n}\n\nexport default MyArticles\n","import React, {useEffect} from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport MyProjects from \"../organisms/MyProjects\";\nimport MyInformations from \"../organisms/MyInformations\";\nimport MyIntroduction from \"../organisms/MyIntroduction\";\nimport ShapesParallaxBackground from \"../molecules/ShapesParallaxBackground\";\nimport WelcomeMessage from \"../organisms/WelcomeMessage\";\nimport MyArticles from \"../organisms/MyArticles\";\n\nconst Home = props => {\n\n  return (\n    <div>\n        <div style={{height: '80vh'}} className=\"position-relative bg-home\">\n          <div className=\"position-absolute w-100 h-100\">\n            <Container className=\"w-100 h-100 d-flex flex-column align-items-center justify-content-center text-center\">\n              <WelcomeMessage/>\n            </Container>\n          </div>\n\n          {/*<ShapesParallaxBackground/>*/}\n        </div>\n\n      <div className=\"bg-clear p-5\">\n        <Container>\n          <MyIntroduction/>\n        </Container>\n      </div>\n\n      <Container className=\"py-5\">\n        <MyInformations/>\n      </Container>\n\n      <div className=\"bg-clear\">\n        <Container className=\"py-5\">\n          <MyProjects/>\n        </Container>\n      </div>\n\n      <div className=\"bg-dark text-white p-5\">\n        <Container>\n          <MyArticles/>\n        </Container>\n      </div>\n\n      <div>\n        Want to contact me ????\n        Mail\n        Send message from this site\n      </div>\n\n    </div>\n  )\n}\n\nexport default Home\n","import React from \"react\";\n\nconst TheFooter = props => {\n  return (\n    <footer>\n      <div>Made with <span role=\"img\" aria-label=\"love\">❤️</span> (and ReactJS)</div>\n      <div>Hosted on GitHub Pages</div>\n      <div>Social links</div>\n    </footer>\n  )\n}\n\nexport default TheFooter\n","import React, {useEffect} from \"react\";\n\nconst WelcomeModal = props => {\n  return null\n  return (\n    <div className=\"position-fixed text-white d-flex align-items-center justify-content-center w-100 vh-100\" style={{left: 0, top: 0, zIndex: 9999, background: \"black\"}}>\n      <p>Jean-Baptiste TERRAZZONI</p>\n    </div>\n  )\n}\n\nexport default WelcomeModal\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport { ParallaxProvider } from 'react-scroll-parallax';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nimport TheNavBar from \"./components/organisms/TheNavBar\";\nimport Home from \"./components/pages/Home\";\nimport TheFooter from \"./components/organisms/TheFooter\";\nimport WelcomeModal from \"./components/organisms/WelcomeModal\";\n\nexport default function App() {\n  return (\n    <Router>\n      <TheNavBar/>\n        <ParallaxProvider>\n          <Switch>\n            <Route path=\"/\">\n              <Home/>\n            </Route>\n          </Switch>\n        </ParallaxProvider>\n      <TheFooter/>\n      <WelcomeModal/>\n    </Router>\n  );\n}\n"],"sourceRoot":""}